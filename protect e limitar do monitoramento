const ss = SpreadsheetApp.getActiveSpreadsheet();

// Inserir o Menu na planilha 201022

function onOpen() {

SpreadsheetApp.getUi() 
  .createMenu('Menu de Funções')
  .addItem('Proteger', 'exeProteger')
  .addItem('Remover Proteções', 'removerProtecoes')
  .addSubMenu(SpreadsheetApp.getUi().createMenu('Turmas')
    .addItem('Criar Turmas', 'criarTurmas')
    .addItem('Excluir Turmas', 'excluirTurmas'))
  .addToUi();

  // Atualiza a função getLinks na aba Geral
  // ss.getSheetByName("GERAL").getRange("B7").setValue("");
  // ss.getSheetByName("GERAL").getRange("B7").setFormula("=ARRAYFORMULA(IFERROR(HYPERLINK(getLinksTurmas();getTurmas());geTurmas()))")
}

function exeProteger(){

//CRIA ARRAY DOS INTERVALOS A SEREM LIBERADOS -- DETERMINAR TODOS OS INTERVALOS ;

var email = []
var professores = []
var intervalos = []
var aux = ss.getSheetByName("Aux").getRange("E3:E52").getValues();
var aux2 = ss.getSheetByName("Aux").getRange("F3:F52").getValues();
var aux3 = ss.getSheetByName("Aux").getRange("G3:G52").getValues();
for (i = 0; i < 50; i++){
if(aux[i] != ""){email.push(aux[i]);} // Lista de email de editores exceto os vazios
if(aux2[i] != ""){professores.push(aux2[i]);}// Lista de email dos professores exceto os vazios
if(aux3[i] != ""){intervalos.push(aux3[i]);}// Lista de invervalos exceto os vazios
}

//EXECUTA FUNÇÃO DE PROTEÇÃO
  proteger(email,intervalos,professores);
  limitar();
  Browser.msgBox("Aviso","Proteções Ativadas",Browser.Buttons.OK);
}
function proteger(email, intervalos, professores){
  var sheets = ss.getSheets();
  var ativa, auxi
// for (var i = 0; i < 5; i++){
  for (var i = 0; i < sheets.length; i++){
    ativa = ss.getSheetByName(sheets[i].getName());
    switch (sheets[i].getName()) {
    case "Aux":
    case "GERAL":
    case "Escola":
      auxi = ativa.protect().setDescription("Células Protegidas");
      break;
    default:
      var unprotected = []
      for (var j = 0; j < intervalos.length; j++) {
        auxi = ativa.protect().setDescription("Células Protegidas");
        unprotected.push(ativa.getRange(intervalos[j]));
      }
      auxi.setUnprotectedRanges(unprotected); 
      break;
    }
  auxi.addEditors(email);
  auxi.removeEditors(professores);
}}
function removerProtecoes(){
  var sheets = ss.getSheets();
  var ativa;
  for (var i = 0; i < sheets.length; i++) {
    ativa = ss.getSheetByName(sheets[i].getName());
    ativa.protect().remove();
  }
  Browser.msgBox("Aviso","Proteções Desativadas",Browser.Buttons.OK);
}
function limitar(){
  eliminar();
  var sheets = ss.getSheets();
  var ativa, aux
  var email = []
  var intervalos = []
  var aux = ss.getSheetByName("Aux").getRange("G3:G52").getValues();
  var aux1 = ss.getSheetByName("Aux").getRange("E3:E52").getValues();
  for (i = 0; i < 50; i++){
    if(aux[i] != ""){intervalos.push(aux[i]);}
    if(aux1[i] != ""){email.push(aux1[i]);}
  }
  for (var i = 0; i < sheets.length; i++){
  // Procurar por aba
    ativa = ss.getSheetByName(sheets[i].getName());
    for(var j = 0; j < (sheets.length - 3); j++){
      if(sheets[(i)].getName() == ss.getSheetByName("Escola").getRange("G"+(j+8)).getValue()) {
        var editores = []
        for (var k = 0; k < 50; k++){
          if (k < email.length){editores.push(email[k]);} //insere o email dos editores a relação geral
          var aux1 = ss.getSheetByName("Escola").getRange((8+j),(k+14)).getValues();
          if(aux1 != ""){editores.push(aux1);}
        }
        ativa = ss.getSheetByName(sheets[i].getName());
        for(var k = 0; k < intervalos.length; k++){
          aux = ativa.getRange(intervalos[k]).protect().setDescription("Células Protegidas");
          aux.removeEditors(aux.getEditors());
          aux.addEditors(editores);
}}}}}
function eliminar(){
  var protections = ss.getProtections(SpreadsheetApp.ProtectionType.RANGE);
  for (var i = 0; i < protections.length; i++) {
    var protection = protections[i];
    if (protection.canEdit()) {
      protection.remove();
}}}
function getTurmas(){
  let turmas = [];
  for(let i = 1; i < 50; i++){
    if (ss.getSheetByName("Escola").getRange("F" + i).getValue() == "ENSINO FUNDAMENTAL DE 9 ANOS" || ss.getSheetByName("Escola").getRange("F" + i).getValue() == "EDUCACAO INFANTIL" || ss.getSheetByName("Escola").getRange("F" + i).getValue() == "CEE"){
      turmas.push(ss.getSheetByName("Escola").getRange("G" + i).getValue());
    }
  }
  return turmas;
}
function criarTurmas(){
  let turmas = getTurmas();
  for (let i=0; i < turmas.length;i++){
    criarTurma(turmas[i]);
  }
  Browser.msgBox("Execução de Criação de Turmas","Turmas criadas com sucesso",Browser.Buttons.OK)
}
function criarTurma(nturma){
  let base = ss.getSheetByName("Base");
  let old = ss.getSheetByName(nturma);
  /* Excluir a turma anterior antes de criar a nova */
  if (old){
    let resposta = Browser.msgBox('Excluir tabela ' + nturma,'Deseja realmente excluir a tabela ' + nturma + '? Todos os dados serão perdidos.',Browser.Buttons.YES_NO);
    console.log(resposta)
    if (resposta == "yes") {
      ss.deleteSheet(old);
      let turma = base.copyTo(ss).setName(nturma).showSheet();
      turma.getRange("H4").setValue(nturma);
    }
  }else{
  let turma = base.copyTo(ss).setName(nturma).showSheet();
  turma.getRange("H4").setValue(nturma);
  }
}
function excluirTurmas(){
  let turmas = getTurmas();
  let resposta = Browser.msgBox('Excluir turmas? ','Deseja realmente excluir todas as turmas? Todos os dados serão perdidos.',Browser.Buttons.YES_NO);
  if (resposta == "yes") {
    for (let i=0; i < turmas.length;i++){
      let old = ss.getSheetByName(turmas[i])
      if (old) ss.deleteSheet(old);
    }
  Browser.msgBox("Exclusão de Turmas","Turmas excluídas com sucesso",Browser.Buttons.OK)  
  }
}
function getLinksTurmas(){
  let turmas = getTurmas();
  let links = [];
  for (let i =0; i < turmas.length; i++){
    if(ss.getSheetByName(turmas[i])){
    let aux = ss.getUrl() + "#gid=" + ss.getSheetByName(turmas[i]).getSheetId().toString()
    links.push(aux);
    }
  }
  console.log(links)
  return links;
}
